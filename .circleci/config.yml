---
version: 2.1

executors:
  machine_executor:
    machine: true
    working_directory: ~/panlexicon

  rails_executor:
    working_directory: ~/panlexicon
    docker:
      - image: circleci/ruby:2.6.3-node-browsers
        environment:
          BUNDLE_JOBS: 4
          BUNDLE_RETRY: 3
          BUNDLE_PATH: vendor/bundle
          PGHOST: localhost
          PGUSER: panlexicon
          RAILS_ENV: test
      - image: postgres:10
        environment:
          POSTGRES_USER: panlexicon
          POSTGRES_DB: panlexicon_test
          POSTGRES_PASSWORD: ""

commands:
  setup_bundler:
    description: "Set up Bundler dependencies"
    steps:
      - run:
          name: Install bundler with appropriate version
          command: gem install bundler -v $(grep -A 1 "BUNDLED WITH" Gemfile.lock | tail -1 | tr -d " ")
      - restore_cache:
          keys:
            - bundler-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ checksum "Gemfile.lock" }}
            - bundler-{{ .Environment.CACHE_VERSION }}-{{ arch }}-
      - run: bundle install --frozen && bundle clean
      - save_cache:
          key: bundler-{{ .Environment.CACHE_VERSION }}-{{ arch }}-{{ checksum "Gemfile.lock" }}
          paths:
            - ~/.bundle
            - ./vendor/bundle

  setup_heroku_cli:
    description: "Install the Heroku CLI"
    steps:
      - restore_cache:
          name: Restore Heroku CLI archive
          key: heroku-cli-{{ .Environment.CACHE_VERSION }}-{{ arch }}
      - run:
          name: Download Heroku CLI archive
          command: |
            if [ ! -f heroku-linux-amd64.tar.gz ]; then
              wget https://cli-assets.heroku.com/branches/stable/heroku-linux-amd64.tar.gz
            fi
      - save_cache:
          name: Cache Heroku CLI archive
          key: heroku-cli-{{ .Environment.CACHE_VERSION }}-{{ arch }}
          paths:
            - heroku-linux-amd64.tar.gz
      - run:
          name: Set up Heroku CLI
          command: |
            sudo mkdir -p /usr/local/lib /usr/local/bin
            sudo tar -xvzf heroku-linux-amd64.tar.gz -C /usr/local/lib
            sudo ln -s /usr/local/lib/heroku/bin/heroku /usr/local/bin/heroku

            cat > ~/.netrc \<< EOF
            machine api.heroku.com
              login $HEROKU_LOGIN
              password $HEROKU_API_KEY
            EOF

jobs:
  install_dependencies:
    executor: rails_executor
    steps:
      - checkout
      - setup_bundler

  lint:
    executor: rails_executor
    steps:
      - checkout
      - setup_bundler
      - run: bundle --path vendor/bundle
      - run: bin/lint

  test:
    executor: rails_executor
    steps:
      - checkout
      - setup_bundler
      - run: bundle --path vendor/bundle
      - run: dockerize -wait tcp://localhost:5432 -timeout 1m
      - run: bundle exec rake db:test:prepare
      - run: bin/rails assets:precompile
      - run: mkdir ~/rspec
      - run: bundle exec rspec --format documentation --format RspecJunitFormatter -o ~/rspec/rspec.xml
      - store_test_results:
          path: ~/rspec
      - store_artifacts:
          path: tmp/screenshots
          destination: screenshots

  test_docker:
    executor: machine_executor
    steps:
      - checkout
      - run:
          name: Install Docker Compose
          command: |
            curl -L https://github.com/docker/compose/releases/download/1.23.2/docker-compose-`uname -s`-`uname -m` > ~/docker-compose
            chmod +x ~/docker-compose
            sudo mv ~/docker-compose /usr/local/bin/docker-compose
      - run: docker-compose build
      - run: docker-compose run web bin/setup
      - run: docker-compose run web bin/rspec

  deploy:
    executor: machine_executor
    steps:
      - checkout
      - setup_heroku_cli
      - run: heroku git:remote -a panlexicon
      - run: git push https://heroku:$HEROKU_API_KEY@git.heroku.com/panlexicon.git $CIRCLE_SHA1:refs/heads/master

workflows:
  version: 2
  setup_test_deploy:
    jobs:
      - install_dependencies
      - lint:
          requires:
            - install_dependencies
      - test:
          requires:
            - install_dependencies
      - deploy:
          requires:
            - test
            - lint
          filters:
            branches:
              only: master
      - test_docker:
          filters:
            branches:
              only: /^docker.*/

  docker_nightly:
    jobs:
      - test_docker
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
